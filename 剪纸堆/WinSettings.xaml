<Window x:Class="FloatClipboard.WinSettings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FloatClipboard"
        mc:Ignorable="d"
        Topmost="True"
        Title="剪纸堆-设置" 
        ResizeMode="NoResize" 
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>


        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Margin="1" MinWidth="80" >
                            <Border.Background>
                                <SolidColorBrush x:Name="MyAnimatedBrushBackground" Color="Transparent" />
                            </Border.Background>
                            <StackPanel Orientation="Horizontal" Margin="8">
                                <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                                <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0020000" />
                                                <LinearColorKeyFrame Value="#7E9C9C9C" KeyTime="00:00:00.0220000" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                                <LinearColorKeyFrame Value="#7E9C9C9C" KeyTime="00:00:00.0020000" />
                                                <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0220000" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="#FFDDDDDD" Height="5" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="#FFC0C0C0" Stretch="Fill" SnapsToDevicePixels="True"  StrokeThickness="0" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="#FFAAAAAA"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="#FF999999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>

                    <Border x:Name="TrackBackground" Height="18.0" Margin="5,0" VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="#FFDDDDDD" Height="4.0" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" >
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="11"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>





        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderThickness="3" CornerRadius="3" BorderBrush="{DynamicResource universalBrush}" Background="{DynamicResource universalBrush}" SnapsToDevicePixels="True" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,3" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource universalBrush}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource universalBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFBEE6FD"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF73CFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF73CFFF"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFBCDDEE"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource universalBrush}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource universalBrush}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox" >
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid >
                            <Rectangle x:Name="outerRectangle" Fill="#FFFFD5D5"/>
                            <Rectangle Margin="10" x:Name="highlightCircle" >
                            </Rectangle>
                            <ContentPresenter Margin="5,3" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#FFB1FFB1"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFB1FFB1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFCCCCCC"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">

                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFBBBBBB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="84"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="80"/>
            
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock x:Name="tbkOpacity"  VerticalAlignment="Center">透明度：50%</TextBlock>
        <Slider x:Name="sldOpacity" Grid.Column="2" Value="0.5" Orientation="Horizontal" Width="80" SmallChange="0.01" LargeChange="0.1" Maximum="1" Template="{StaticResource SliderHorizontal }" ValueChanged="ScbOpacityValueChangedEventHandler"/>
        <TextBlock x:Name="tbkMax" VerticalAlignment="Center" Grid.Row="2">最多：100条</TextBlock>
        <Slider x:Name="sldMax" Grid.Column="2" Value="100" Orientation="Horizontal" Width="80" Grid.Row="2" LargeChange="10" SmallChange="1" Minimum="1" Maximum="100"  Template="{StaticResource SliderHorizontal }" ValueChanged="ScbMaxValueChangedEventHandler"/>
        <TextBlock x:Name="tbkHeight" VerticalAlignment="Center" Grid.Row="4">收缩高度：300</TextBlock>
        <Slider x:Name="sldHeight" Grid.Column="2" Value="300" Orientation="Horizontal" Width="80" Grid.Row="4" LargeChange="10" SmallChange="1" Minimum="48" Maximum="1024"  Template="{StaticResource SliderHorizontal }" ValueChanged="ScbHeightValueChangedEventHandler"/>

        <CheckBox x:Name="cbxStartup" Grid.Row="6" Content="开机自启" Click="ChkStartupClickEventHandler"/>
        <CheckBox x:Name="cbxHide" Grid.Row="6" Grid.Column="2" Content="默认隐藏"/>
        <Button Content="保存" Grid.Row="8" Click="BtnOKClickEventHandler"/>
        <Button Content="取消" Grid.Row="8" Grid.Column="2" Click="BtnExitClickEventHandler"/>
    </Grid>
</Window>
