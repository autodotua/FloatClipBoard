<Window x:Class="剪纸堆.Settings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:剪纸堆"
        mc:Ignorable="d"
        Topmost="True"
        Title="Settings" Height="300" Width="300" ShowInTaskbar="False" ResizeMode="NoResize" SizeToContent="WidthAndHeight" WindowStyle="None">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderThickness="3" CornerRadius="3" BorderBrush="{DynamicResource universalBrush}" Background="{DynamicResource universalBrush}" SnapsToDevicePixels="True" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,3" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource universalBrush}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource universalBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFBEE6FD"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF73CFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF73CFFF"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFBCDDEE"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource universalBrush}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource universalBrush}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox" >
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid >
                            <Rectangle x:Name="outerRectangle" Fill="#FFFFD5D5"/>
                            <Rectangle Margin="10" x:Name="highlightCircle" >
                            </Rectangle>
                            <ContentPresenter Margin="5,3" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#FFB1FFB1"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFB1FFB1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFCCCCCC"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">

                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFBBBBBB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="80"/>
            <ColumnDefinition Width="4"/>
            <ColumnDefinition Width="80"/>
            
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock x:Name="tbkOpacity" HorizontalAlignment="Center" VerticalAlignment="Center">透明度：50%</TextBlock>
        <ScrollBar x:Name="scbOpacity" Grid.Column="2" Value="50" Orientation="Horizontal" Width="80" SmallChange="1" LargeChange="10" Maximum="100" ValueChanged="ScbOpacityValueChangedEventHandler"/>
        <TextBlock x:Name="tbkMax" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2">最多：100条</TextBlock>
        <ScrollBar x:Name="scbMax" Grid.Column="2" Value="100" Orientation="Horizontal" Width="80" Grid.Row="2" LargeChange="10" SmallChange="1" Minimum="1" Maximum="100" ValueChanged="ScbMaxValueChangedEventHandler"/>

        <CheckBox x:Name="cbxStartup" Grid.Row="4" Content="开机自启" Click="ChkStartupClickEventHandler"/>
        <CheckBox x:Name="cbxHide" Grid.Row="4" Grid.Column="2" Content="隐藏自身"/>
        <Button Content="保存" Grid.Row="6" Click="BtnOKClickEventHandler"/>
        <Button Content="取消" Grid.Row="6" Grid.Column="2" Click="BtnExitClickEventHandler"/>
    </Grid>
</Window>
